<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.fair-acc</groupId>
        <artifactId>chartfx-parent</artifactId>
        <version>${revision}${sha1}${changelist}</version>
        <relativePath>..</relativePath>
    </parent>
    <artifactId>chartfx</artifactId>
    <name>chartfx-chart</name>
    <properties>
        <project.moduleName>io.fair_acc.chartfx</project.moduleName>
        <sass.version>1.64.2</sass.version>
        <scss.inputDir>${project.basedir}/src/main/resources/io/fair_acc/chartfx/</scss.inputDir>
        <css.outputDir>${scss.inputDir}</css.outputDir>
    </properties>

    <description>This charting library ${project.artifactId}- is an extension
		in the spirit of Oracle's XYChart and performance/time-proven JDataViewer charting functionalities.
		Emphasis was put on plotting performance for both large number of data points and real-time displays,
		as well as scientific accuracies leading to error bar/surface plots, and other scientific plotting
		features (parameter measurements, fitting, multiple axes, zoom, ...).
	</description>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>${chartfx.ikonli.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome-pack</artifactId>
            <version>${chartfx.ikonli.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome5-pack</artifactId>
            <version>${chartfx.ikonli.version}</version>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>4.0.17</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>openjfx-monocle</artifactId>
            <version>jdk-12.0.1+2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fair-acc</groupId>
            <artifactId>dataset</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.fair-acc</groupId>
            <artifactId>math</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>${chartfx.controlsfx.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-web</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId> <!-- needed to for benchmark saving images to file -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ar.com.hjg</groupId>
            <artifactId>pngj</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.hdrhistogram</groupId>
            <artifactId>HdrHistogram</artifactId>
            <version>2.1.12</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin> <!-- Converts Sass files to CSS -->
                <groupId>us.hebi.sass</groupId>
                <artifactId>sass-cli-maven-plugin</artifactId>
                <version>1.0.3</version>
                <configuration>
                    <sassVersion>${sass.version}</sassVersion>
                    <args>
                        <arg>${scss.inputDir}:${css.outputDir}</arg>
                        <arg>--no-source-map</arg>
                    </args>
                </configuration>
                <executions>
                    <execution>
                        <id>sass-exec</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
