<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.gsi</groupId>
        <artifactId>chartfx</artifactId>
        <version>${revision}${sha1}${changelist}</version>
        <relativePath>..</relativePath>
    </parent>
    <groupId>de.gsi.chart</groupId>
    <artifactId>chartfx-chart</artifactId>
    <version>11.2.7.stag</version>
    <name>chartfx-chart</name>
    <properties>
        <project.moduleName>de.gsi.chartfx.chart</project.moduleName>
    </properties>

    <description>This charting library ${project.artifactId}- is an extension
		in the spirit of Oracle's XYChart and performance/time-proven JDataViewer charting functionalities.
		Emphasis was put on plotting performance for both large number of data points and real-time displays,
		as well as scientific accuracies leading to error bar/surface plots, and other scientific plotting
		features (parameter measurements, fitting, multiple axes, zoom, ...).
	</description>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>17.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>17.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>12.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome-pack</artifactId>
            <version>12.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome5-pack</artifactId>
            <version>12.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>4.0.16-alpha</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>openjfx-monocle</artifactId>
            <version>jdk-12.0.1+2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.gsi.dataset</groupId>
            <artifactId>chartfx-dataset</artifactId>
            <version>11.2.7.stag</version>
        </dependency>
        <dependency>
            <groupId>de.gsi.math</groupId>
            <artifactId>chartfx-math</artifactId>
            <version>11.2.7.stag</version>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>11.1.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-web</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId> <!-- needed to for benchmark saving images to file -->
            <version>17.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ar.com.hjg</groupId>
            <artifactId>pngj</artifactId>
            <version>2.1.0</version>
        </dependency>
    </dependencies>
</project>

